<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Move element &apos;Employee.java&apos; to &apos;learn/src/main/java/com.learn.Day1.Java8.pojo&apos;&#x0A;- Original project: &apos;learn&apos;&#x0A;- Destination element: &apos;learn/src/main/java/com.learn.Day1.Java8.pojo&apos;&#x0A;- Original element: &apos;com.learn.Day1.Java8.Employee.java&apos;&#x0A;- Update references to refactored element" description="Move compilation unit" destination="/src\/main\/java&lt;com.learn.Day1.Java8.pojo" element1="/src\/main\/java&lt;com.learn.Day1.Java8{Employee.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.move" patterns="*" policy="org.eclipse.jdt.ui.moveResources" qualified="false" references="true" stamp="1516435899145" units="1" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;count&apos; from expression &apos;employeeList.stream().filter(employee -&gt; employee.getAddress().getDoorNumber().equals(&quot;1&quot;)).count()&apos;&#x0A;- Original project: &apos;learn&apos;&#x0A;- Variable name: &apos;count&apos;&#x0A;- Destination method: &apos;com.learn.Day1.Java8.IteratorUtility.main()&apos;&#x0A;- Variable expression: &apos;employeeList.stream().filter(employee -&gt; employee.getAddress().getDoorNumber().equals(&quot;1&quot;)).count()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;count&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src\/main\/java&lt;com.learn.Day1.Java8{IteratorUtility.java" name="count" replace="true" selection="1078 100" stamp="1516437832826" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect&apos; from expression &apos;employeeList.stream().map(employee -&gt; employee.getSalary() * 100).collect(Collectors.counting())&apos;&#x0A;- Original project: &apos;learn&apos;&#x0A;- Variable name: &apos;collect&apos;&#x0A;- Destination method: &apos;com.learn.Day1.Java8.IteratorUtility.main()&apos;&#x0A;- Variable expression: &apos;employeeList.stream().map(employee -&gt; employee.getSalary() * 100).collect(Collectors.counting())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src\/main\/java&lt;com.learn.Day1.Java8{IteratorUtility.java" name="collect" replace="true" selection="1381 94" stamp="1516439594719" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect&apos; from expression &apos;employeeList.stream().map(employee -&gt; employee.getSalary() * 100).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;learn&apos;&#x0A;- Variable name: &apos;collect&apos;&#x0A;- Destination method: &apos;com.learn.Day1.Java8.IteratorUtility.main()&apos;&#x0A;- Variable expression: &apos;employeeList.stream().map(employee -&gt; employee.getSalary() * 100).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src\/main\/java&lt;com.learn.Day1.Java8{IteratorUtility.java" name="collect" replace="true" selection="1383 93" stamp="1516439821370" version="1.0"/>&#x0A;<refactoring comment="Copy 2 elements to &apos;learn17/src/main/java/com.learn.pojo&apos;&#x0A;- Original project: &apos;learn&apos;&#x0A;- Destination element: &apos;learn17/src/main/java/com.learn.pojo&apos;&#x0A;- Original elements:&#x0A;     com.learn.Day1.Java8.pojo.Employee.java&#x0A;     com.learn.Day1.Java8.pojo.Address.java" description="Copy compilation units" destination="=learn17/src\/main\/java&lt;com.learn.pojo" element1="/src\/main\/java&lt;com.learn.Day1.Java8.pojo{Employee.java" element2="/src\/main\/java&lt;com.learn.Day1.Java8.pojo{Address.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.copy" policy="org.eclipse.jdt.ui.copyResources" stamp="1516477098130" units="2" version="1.0"/>
</session>